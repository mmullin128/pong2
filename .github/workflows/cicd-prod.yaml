name: CICD Prod
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        working-directory: ./ClientServer
        run: |
          npm install --include=dev
      - name: Run Unit Tests
        working-directory: ./ClientServer
        run: |
          npm run unit-tests
      - name: Webpack Bundling
        working-directory: ./ClientServer
        run: |
          npm run build
      - name: Docker Login
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Docker Build
        run: |
          docker build -t mmullin12/pong:latest -f ./ClientServer/app.DockerFile ./ClientServer
      - name: Docker Push
        run: |
          docker push mmullin12/pong:latest
  deploy:
    needs: [build]
    runs-on: [self-hosted, prod]
    steps:
      - name: Verify Snapd
        run: |
          hello-world
      - name: Verify Docker
        run: |
          sudo docker run hello-world
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker Login
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Pull Docker Image
        run: |
          sudo docker pull mmullin12/pong:latest
      - name: Delete Old Docker Container
        run: |
          sudo docker rm -f current-container || true
      - name: Run Docker Container
        run: |
          sudo docker run -d -p 8080:8080 --name current-container mmullin12/pong:latest
          sudo docker ps
      - name: Delete Old Proxy Container
        run: |
          sudo docker rm -f reverse_proxy_service || true
      - name: Run Proxy Container
        run: |
          sudo docker build -t reverse_proxy_image:latest -f ./ClientServer/proxy/proxy.DockerFile ./ClientServer/proxy/
        #  sudo docker build -t reverse_proxy_image:latest -f ./ClientServer/proxy/proxy.DockerFile ./ClientServer/proxy/
          sudo docker run --name reverse_proxy_service -v ./cert_volume:/letsencrypt -v ./cert_volume/certs:/etc/letsencrypt -p 80:80 -p 443:443 -d reverse_proxy_image:latest
      - name: Get and Install SSL Certificate
        run: |
          sudo docker build -it --rm --name certbot -f ./ClientServer/proxy/certbot.DockerFile ./ClientServer/proxy/ -v ./cert_volume:/letsencrypt -v ./cert_volume/certs:/etc/letsencrypt certbot bash
        #  certbot certonly --webroot
      - name: Test Automatic SSL Renewal
        run: |
          sudo certbot renew --dry-run
      
  test:
    needs: [build, deploy]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ClientServer
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          npm install --include=dev
      - name: Run End to End Tests
        env:
          HOST: "3.140.210.195"
        run: |
          npm run e2e-tests
          curl http://3.140.210.195/